//const로 선언된 변수에 원시값을 할당한 경우 값을 변경할 수 없음
//하지만 const로 선언된 변수에 객체를 할당한 경우 값을 변경할 수 있다. 

const person = {
    name: 'Lee'
  };
  
  // 객체는 변경 가능한 값이다. 따라서 재할당없이 변경이 가능하다.
  person.name = 'Kim';
  
  console.log(person); // {name: "Kim"}


  //const는 재할당을 금지할 뿐 불변을 의미하지는 않음.
  //프로퍼티 동적 생성, 삭제, 프로퍼티 값의 변경을 통해 객체를 변경하는 것은 가능하다. 
  //이때 객체가 변경되더라도 변수에 할당된 참조값은 변경되지 않는다.

  
  //var VS let VS const
  /*
    변수 선언에는 기본적으로 const를 사용하고 let은 재할당이 필요한 경우에 한정해서 사용하는 것이 좋다.
    ES6를 사용한다면 var는 사용하지 X
    재할당이 필요한 경우에 한정해 let키워드를 사용. 이때 변수의 스코프는 최대한 좁게 만든다.
    변경이 발생하지 않고 읽기 전용으로 사용하는 원시값과 객체에는 const키워드를 사용한다. 
  */